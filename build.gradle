/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.6.1/userguide/java_library_plugin.html
 */
 
plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'eclipse'
}

apply plugin: "eclipse"

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:29.0-jre'

	// https://mvnrepository.com/artifact/org.mongodb/mongodb-driver-sync
	implementation group: 'org.mongodb', name: 'mongodb-driver-sync', version: '4.8.2'

	// https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc
	implementation group: 'org.xerial', name: 'sqlite-jdbc', version: '3.40.0.0'

	// https://mvnrepository.com/artifact/org.postgresql/postgresql
	implementation group: 'org.postgresql', name: 'postgresql', version: '42.5.1'


    // Use JUnit test framework
    testImplementation 'junit:junit:4.13'
}

jar {
	manifest {
		attributes 'Main-Class': 'mongoCSToJson.App'
	}
	from {
		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	}
}
